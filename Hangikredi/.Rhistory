balance_class <- Mclust(df$balance,verbose = FALSE)
summary(balance_class)
df$balance_range <- balance_class$classification
table(df$balance_range,df$balance)
df$balance
summary(balance_class)
df %>%
tab_cells(balance) %>%
tab_cols(balance_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
ggplot(df) +
geom_density(aes(balance, color=balance_range))
ggplot(df) +
geom_density(aes(balance, fill=balance_range))
ggplot(df) +
geom_density(aes(balance, color=balance_range), fill=balance_range)
ggplot(df) +
geom_density(aes(balance, color=balance_range), color=balance_range)
ggplot(df) +
geom_density(aes(balance, color=balance_range, fill=balance_range))
ggplot(df) +
geom_density(aes(balance, color=factor(balance_range)))
ggplot(df) +
geom_density(aes(balance, fill=factor(balance_range)))
df %>%
tab_cells(balance) %>%
tab_cols(balance_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
ggplot(df) +
geom_density(aes(balance, fill=factor(balance_range)))
df<-df %>%
mutate(balance_recode = case_when(
balance_range <= 0  ~ "(<=0)",
balance > 0  ~ "(>0)"
)
)
df
df %>%
select(balance,balance_recode)
df %>%
select_if(is.numeric)
day_class <- Mclust(df$day,verbose = FALSE)
summary(day_class)
df$day_range <- day_class$classification
table(df$day_range,df$day)
ggplot(df) +
geom_density(aes(day, fill=factor(day_range)))
ggplot(df) +
geom_density(aes(day, fill=factor(day_range), color=y))
ggplot(df) +
geom_density(aes(day, color=factor(day_range), fill=y))
ggplot(df) +
geom_density(aes(day, shape=factor(day_range), fill=y))
ggplot(df) +
geom_density(aes(day, size=factor(day_range), fill=y))
ggplot(df) +
geom_density(aes(day, color=factor(day_range), fill=y))
ggplot(df) +
geom_density(aes(age, color=factor(age_range)), fill=y)
ggplot(df) +
geom_density(aes(age, color=factor(age_range), fill=y))
df %>%
tab_cells(day) %>%
tab_cols(day_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
ggplot(df) +
geom_density(aes(day, color=factor(day_range), fill=y))
df %>%
tab_cells(day) %>%
tab_cols(day_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
summary(day_class)
ggplot(df) +
geom_density(aes(day, color=factor(day_range), fill=y))
df %>%
tab_cells(day) %>%
tab_cols(day_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
ggplot(df) +
geom_density(aes(day, color=factor(day_range), fill=y))
ggplot(df) +
geom_density(aes(day, fill=factor(day_range)))
df %>%
tab_cells(day) %>%
tab_cols(day_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
df<-df %>%
mutate(day_recode = case_when(
day_range >= 1 &day_range <= 3  ~ "1-9",
day_range == 4  ~ "10-14",
day_range >= 5 &day_range <= 7  ~ "15-21",
day_range == 8  ~ "22-26",
day_range ==9  ~ "27-31"
)
)
df %>%
select(day,day_recode)
df %>%
select_if(is.numeric)
duration_class <- Mclust(df$duration,verbose = FALSE)
summary(duration_class)
table(df$duration_range,df$duration)
df$duration_range <- duration_class$classification
table(df$duration_range,df$duration)
duration_class$classification
ggplot(df) +
geom_density(aes(duration, color=factor(duration_range), fill=y))
ggplot(df) +
geom_density(aes(duration, color=factor(duration_range), fill=y))
ggplot(df) +
geom_density(aes(duration, fill=factor(duration_range)))
df %>%
tab_cells(duration) %>%
tab_cols(duration_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
df<-df %>%
mutate(duration_recode = case_when(
duration_range ==1  ~ "0-28",
duration_range >= 2 & duration_range <= 4  ~ "29-181",
duration_range >= 5  ~ "257+",
)
)
df %>%
select(duration,duration_recode)
campaign_class <- Mclust(df$campaign,verbose = FALSE)
summary(campaign_class)
df$campaign_range <- campaign_class$classification
table(df$campaign_range,df$campaign)
summary(campaign_class)
summary(df$campaign)
ggplot(df) +
geom_density(aes(campaign, color=factor(campaign_range), fill=y))
ggplot(df) +
geom_density(aes(campaign, fill=factor(campaign_range)))
df %>%
tab_cells(campaign) %>%
tab_cols(campaign_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
df<-df %>%
mutate(campaign_recode = case_when(
campaign_range <7  ~ "1-15",
campaign_range ==7  ~ "16-23",
campaign_range > 7  ~ "24+",
)
)
df %>%
select(campaign,campaign_recode)
summary(df)
df %>%
select_if(grep("range"))
df %>%
select_if(grep(df,"range"))
grep(df,"range")
?grep()
grep("[a-z]", letters)
grep("a", letters)
grep("range", df)
grep("range", colnames(df))
df[,grep("range", colnames(df))]
colnames(df[,grep("range", colnames(df))])
df %>%
select(-(colnames(df[,grep("range", colnames(df))])))
df<-df %>%
select(-(colnames(df[,grep("range", colnames(df))])))
df %>%
mutate_if(.x in (colnames(df[,grep("range", colnames(df))])), as.factor)
df %>%
select(colnames(df[,grep("range", colnames(df))]))
df %>%
select(colnames(df[,grep("range", colnames(df))]))
colnames(df[,grep("range", colnames(df))])
colnames(df[,grep("range", colnames(df))])
df %>%
select(colnames(df[,grep("recode", colnames(df))]))
sapply(df, is.character)
sapply(df, is.character)
lapply(df, is.character)
tapply(df, is.character)
vapply(df, is.character)
apply(df, is.character)
apply(df,2, is.character)
colnames(df[,grep("recode", colnames(df))])
sapply(df, %in% colnames(df[,grep("recode", colnames(df))]))
df %in% colnames(df[,grep("recode", colnames(df))])
sapply(df, df %in% colnames(df[,grep("recode", colnames(df))]))
grepl("recode", df)
grepl("recode", df)
grepl("recode", colnames(df))
apply(df,2,function(x) (ifelse(grepl("recode", colnames(df)), "yes", "no")))
apply(df,2,function(x) (ifelse(grepl("recode", colnames(df)), "yes", x )))
apply(df,2,function(x) (ifelse(grepl("recode", colnames(df)), as.factor, x )))
apply(df,2,function(x) (ifelse(grepl("recode", colnames(df)), as.factorx(), x )))
apply(df,2,function(x) (ifelse(grepl("recode", colnames(df)), as.factor(x), x )))
asd<-apply(df,2,function(x) (ifelse(grepl("recode", colnames(df)), as.factor(x), x )))
data.frame(asd)
name(df$age)
colnames(df$age)
df$age
label(df$age)
names(df$age)
name(df$age)
colname(df$age)
colnames(df$age)
rm(asd)
select(df,contains("recode"))
df %>%
mutate_if(contains("recode"), factor) #yhesaplanan degisken
df %>%
mutate_if(contains("recode"), as.factor) #yhesaplanan degisken
df %>% mutate_if(is.character, as.factor)
df
df<-df %>% mutate_if(is.character, as.factor)
df
df %>% select_if(is.numeric)
df_cluster<-df %>% select_if(is.numeric) %>% select(-day)
df_cluster
df_cluster_copy<-df_cluster
scale(df_cluster)
dist <- dist(scale(df_cluster), method = "euclidean")
clust <- hclust(scale(df_cluster), method = "ward.D2")
dist <- dist(scale(df_cluster), method = "euclidean")
gc()
NbClust(data=scale(df_cluster), min.nc=3, max.nc=15, index="all", method="ward.D2")
car_Cluster3 <-kmeans(scale(df_cluster), 3, iter.max=100,nstart=100)
car_Cluster3
library(funModeling)
profiling_num(USArrests)
plot_num(USArrests)
plot_num(df)
freq(df)
df<-df %>%
mutate(balance_recode = case_when(
balance <= 0  ~ "(<=0)",
balance > 0  ~ "(>0)"
)
)
df %>%
select(balance,balance_recode)
df<-df %>% mutate_if(is.character, as.factor)
df_cluster<-df %>% select_if(is.numeric) %>% select(-day)
df_cluster_copy<-df_cluster
scale(df_cluster)
freq(df)
library(cluster)    #kumeleme
library(factoextra) #gorsel
rm(car_Cluster3)
car_Cluster3
#Uzaklik Matrisi ve Gorseli
distance <- get_dist(df)
#Uzaklik Matrisi ve Gorseli
distance <- get_dist(scale(df_cluster))
distance <- get_dist(USArrests)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k2 <- kmeans(df, centers = 2, nstart = 25)
k2 <- kmeans(scale(df_cluster), centers = 2, nstart = 25)
str(k2)
fviz_cluster(k2, data = df)
k2 <- kmeans(USArrests, centers = 2, nstart = 25)
str(k2)
fviz_cluster(k2, data = USArrests)
USArrests
fviz_nbclust(df, kmeans, method = "wss")
fviz_nbclust(df, kmeans, method = "silhouette")
df_cluster
df
df_cluster
k2 <- kmeans(scale(df_cluster), centers = 2, nstart = 25)
fviz_cluster(k2, data = df)
k2
fviz_cluster(k2, data = df)
prcomp(scale(df_cluster))
fviz_cluster(prcomp(scale(df_cluster)), data = df)
df %>% as_tibble() %>%
mutate(kumeler = k2$cluster,
eyaletler = row.names(df)) %>%
ggplot(aes(balance, age, color = factor(kumeler), label = eyaletler)) +
geom_text()
df
df %>% as_tibble() %>%
mutate(kumeler = k2$cluster,
eyaletler = row.names(df)) %>%
ggplot(aes(balance, age, color = factor(kumeler), label = eyaletler)) +
geom_text()
fviz_cluster(k2, data = df)
fviz_cluster(k2, data = df_cluster)
k2
k3 <- kmeans(df , centers = 3, nstart = 25)
k3 <- kmeans(df_cluster , centers = 3, nstart = 25)
k4 <- kmeans(df_cluster , centers = 4, nstart = 25)
k5 <- kmeans(df_cluster , centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = df_cluster) + ggtitle("k=2")
p2 <- fviz_cluster(k3, geom = "point", data = df_cluster) + ggtitle("k=3")
p3 <- fviz_cluster(k4, geom = "point", data = df_cluster) + ggtitle("k=4")
p4 <- fviz_cluster(k5, geom = "point", data = df_cluster) + ggtitle("k=5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
grid.arrange(p1, p2, p3, p4, nrow = 2)
df %>% as_tibble() %>%
mutate(kumeler = k2$cluster,
eyaletler = row.names(df)) %>%
ggplot(aes(balance, age, color = factor(kumeler), label = eyaletler)) +
geom_text()
df %>% as_tibble() %>%
mutate(kumeler = k2$cluster,
eyaletler = row.names(df)) %>%
ggplot(aes(balance, age, color = factor(y), label = eyaletler)) +
geom_text()
df %>% as_tibble() %>%
mutate(kumeler = k2$cluster,
eyaletler = row.names(df)) %>%
ggplot(aes(balance, age, color = factor(kumeler), label = eyaletler)) +
geom_text()
df_cluster
library(ggplot2)
library(tidyverse)
library(expss)
library(NbClust)
library(mclust)
library(gmodels)
library(funModeling)
library(cluster)    #kumeleme
library(factoextra) #gorsel
library(gridExtra)
df_cluster
df_cluster
df_cluster<-df %>% select_if(is.numeric) %>% select(-c(day,age))
df_cluster_copy<-df_cluster
df_cluster
fviz_cluster(k2, data = df_cluster)
fviz_cluster(k2, data = scale(df_cluster))
k3 <- kmeans(scale(df_cluster) , centers = 3, nstart = 25)
k4 <- kmeans(scale(df_cluster) , centers = 4, nstart = 25)
k5 <- kmeans(scale(df_cluster) , centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = scale(df_cluster)) + ggtitle("k=2")
p2 <- fviz_cluster(k3, geom = "point", data = scale(df_cluster)) + ggtitle("k=3")
p3 <- fviz_cluster(k4, geom = "point", data = scale(df_cluster)) + ggtitle("k=4")
p4 <- fviz_cluster(k5, geom = "point", data = scale(df_cluster)) + ggtitle("k=5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
set.seed(1989)
fviz_nbclust(scale(df_cluster), kmeans, method = "wss")
fviz_nbclust(scale(df_cluster), kmeans, method = "silhouette")
gap_stat <- clusGap(scale(df_cluster)), FUN = kmeans, nstart = 25, K.max = 10, B = 50)
clusGap(scale(df_cluster)), FUN = kmeans, nstart = 25, K.max = 10, B = 50)
scale(df_cluster))
df_cluster
scale(df_cluster))
scale(df_cluster)
gap_stat <- clusGap(scale(df_cluster), FUN = kmeans, nstart = 25, K.max = 10, B = 50)
grid.arrange(p1, p2, p3, p4, nrow = 2)
library(fpc)
ds <- dbscan(df, eps = 0.40, MinPts = 5)
install.packages("fpc")
library("fpc")
ds <- dbscan(scale(df_cluster), eps = 0.40, MinPts = 5)
df<-df %>%
mutate(campaign_recode = case_when(
campaign >=1 &  campaign <=2 ~ "1-2",
campaign >2  ~ "2+"
)
)
library(ggplot2)
library(tidyverse)
library(expss)
library(NbClust)
library(mclust)
library(gmodels)
library(funModeling)
library(cluster)    #kumeleme
library(factoextra) #gorsel
library(gridExtra)
library("fpc")
library(gridExtra)
library(readr)
term_deposit_marketing_2020 <- read_csv("C:/Users/user/Desktop/R_Projeler/Hangikredi/term-deposit-marketing-2020.csv")
dataset<-term_deposit_marketing_2020
df<-dataset
summary(df)
str(df)
#replace "unknow" to NA
df[df == "unknown"] <- NA
#Converting all character variables to factor variables
df<-df %>%
mutate_if(sapply(df, is.character), as.factor)
df %>%
select_if(is.numeric)
plot_num(df)
freq(df)
set.seed(1989)
age_class <- Mclust(df$age,verbose = FALSE)
summary(age_class)
df$age_range <- age_class$classification
table(df$age_range,df$age)
ggplot(df) +
geom_density(aes(age, color=factor(age_range), fill=y))
df %>%
tab_cells(age) %>%
tab_cols(age_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
df<-df %>%
mutate(age_recode = case_when(
age_range == 1  ~ "19-30",
age_range >= 2 &age_range <= 5  ~ "31-40",
age_range >= 6 &age_range <= 7  ~ "41-55",
age_range >= 8  ~ "56+",
)
)
df %>%
select(age,age_recode)
df<-df %>%
mutate(balance_recode = case_when(
balance <= 0  ~ "(<=0)",
balance > 0  ~ "(>0)"
)
)
df %>%
select(balance,balance_recode)
set.seed(1989)
day_class <- Mclust(df$day,verbose = FALSE)
summary(day_class)
df$day_range <- day_class$classification
table(df$day_range,df$day)
ggplot(df) +
geom_density(aes(day, color=factor(day_range), fill=y))
ggplot(df) +
geom_density(aes(day, fill=factor(day_range)))
df %>%
tab_cells(day) %>%
tab_cols(day_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
df<-df %>%
mutate(day_recode = case_when(
day_range >= 1 &day_range <= 3  ~ "1-9",
day_range == 4  ~ "10-14",
day_range >= 5 &day_range <= 7  ~ "15-21",
day_range == 8  ~ "22-26",
day_range ==9  ~ "27-31"
)
)
set.seed(1989)
duration_class <- Mclust(df$duration,verbose = FALSE)
summary(duration_class)
df$duration_range <- duration_class$classification
table(df$duration_range,df$duration)
ggplot(df) +
geom_density(aes(duration, color=factor(duration_range), fill=y))
ggplot(df) +
geom_density(aes(duration, fill=factor(duration_range)))
df %>%
tab_cells(duration) %>%
tab_cols(duration_range) %>%
tab_stat_fun("Toplam"=w_n, "Min"=w_min, "Max"=w_max, method=list) %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
df<-df %>%
mutate(duration_recode = case_when(
duration_range ==1  ~ "0-28",
duration_range >= 2 & duration_range <= 4  ~ "29-181",
duration_range >= 5  ~ "257+",
)
)
df<-df %>%
mutate(campaign_recode = case_when(
campaign >=1 &  campaign <=2 ~ "1-2",
campaign >2  ~ "2+"
)
)
summary(df)
df<-df %>% mutate_if(is.character, as.factor)
df_cluster<-df %>% select(duration,campaign)
df_cluster_copy<-df_cluster
k2 <- kmeans(scale(df_cluster), centers = 2, nstart = 25)
fviz_cluster(k2, data = scale(df_cluster))
df %>% as_tibble() %>%
mutate(kumeler = k2$cluster,
codes = row.names(df)) %>%
ggplot(aes(balance, age, color = factor(kumeler), label = codes)) +
geom_text()
k2
k3 <- kmeans(scale(df_cluster) , centers = 3, nstart = 25)
k4 <- kmeans(scale(df_cluster) , centers = 4, nstart = 25)
k5 <- kmeans(scale(df_cluster) , centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = scale(df_cluster)) + ggtitle("k=2")
p2 <- fviz_cluster(k3, geom = "point", data = scale(df_cluster)) + ggtitle("k=3")
p3 <- fviz_cluster(k4, geom = "point", data = scale(df_cluster)) + ggtitle("k=4")
p4 <- fviz_cluster(k5, geom = "point", data = scale(df_cluster)) + ggtitle("k=5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
set.seed(1989)
lca_clust <- Mclust(scale(df_cluster),verbose = FALSE)
k2
saveRDS(xgb_tune, "./hsyndalgic_model.rds")
super_model <- readRDS("./hsyndalgic_model.rds")
predict(super_model, test_x)
